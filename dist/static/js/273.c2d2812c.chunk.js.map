{"version":3,"file":"static/js/273.c2d2812c.chunk.js","mappings":"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","sources":["pages/prescription/prescriptionOrderDetail/index.tsx","pages/system/orderTracking/useOrderListHttp.tsx"],"sourcesContent":["/* eslint-disable indent */\nimport React, { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { Modal } from '@sinohealth/butterfly-ui-antd/lib';\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\nimport ControlTool from './components/ControlTool';\nimport DeliveryLog from './components/DeliveryLog';\nimport DrugList from './components/DrugList';\nimport OrderStatus from './components/OrderStatus';\nimport PayInfo from './components/PayInfo';\nimport PrescriptInfo from './components/PrescriptInfo';\nimport RationalAdvice from './components/RationalAdvice';\nimport SideOrder from './components/SideOrder';\nimport UserInfo from './components/UserInfo';\nimport BackBreadcrumb from '@/components/BackBreadcrumb';\nimport DrugInstructModal from './components/DrugInstructModal';\nimport { httpCancelOrder, httpGetOrderDetail, httpQueryInstruction } from '@/services/system';\nimport { useOrderListHttp } from '@/pages/system/orderTracking/useOrderListHttp';\nimport { useDictHttp } from '@/hooks/useDict';\nimport { useRationalDrug } from './useDetailHook';\n\nimport styles from './index.less';\n\nconst { confirm } = Modal;\n\nconst FOOT_CONTROL: any = {\n  timeout: true,\n  begin_delivery: true,\n  delivery_exception: true,\n  wait: true,\n};\n\n/**\n * 审方订单详情\n * @returns\n */\nconst PrescriptionOrderDetail: React.FC = () => {\n  const [isError, setIsError] = useState(false);\n  const { dictList } = useDictHttp();\n  const [params] = useSearchParams();\n  const ids = params.getAll('id')[0];\n  const {\n    interaction,\n    interactionTip,\n    avoid,\n    avoidTip,\n    beyondIndication,\n    repeatMedication,\n    repeatMedicationTip,\n    remarkCode,\n    errorCode,\n  } = useRationalDrug(ids, isError);\n  const detailType = 'orderSearch'; // orderSearch：订单查询 revieOrder：审方订单\n  const [currentId, setCurrentId] = useState(ids);\n  const [detail, setDetail] = useState<AdminOrder.OrderDetailRes>();\n  const [isDrugInstruct, setIsDrugInstruct] = useState(false);\n  const [rationalDrug, setRationalDrug] = useState<any>({});\n\n  const [orderParams, setOrderParams] = useState({\n    pageNo: 1,\n    pageSize: 50,\n    entity: {},\n    orders: [{ property: 'create_time', direction: 'desc' }],\n  });\n\n  const { total, orderSource, isLoading } = useOrderListHttp(orderParams, 'concat');\n\n  // 订单详情接口\n  async function httpGetOrderDetailReq(orderId: string = '') {\n    const res: AdminOrder.OrderDetailRes = await httpGetOrderDetail(orderId || currentId);\n    setDetail(res);\n    setCurrentId(orderId || currentId);\n    window.history.pushState(null, '', `?id=${orderId || currentId}`);\n  }\n\n  // 药品说明书\n  async function httpQueryInstructionReq(id: string) {\n    try {\n      const res: any = await httpQueryInstruction(id);\n      // eslint-disable-next-line camelcase\n      const { common_name: commonName, content } = res;\n      setIsDrugInstruct(true);\n      setRationalDrug({ commonName, ...content });\n    } catch (err) {\n      setIsDrugInstruct(false);\n    }\n  }\n\n  useEffect(() => {\n    httpGetOrderDetailReq();\n  }, [ids]);\n\n  function httpCancelOrderReq() {\n    confirm({\n      title: '是否取消该订单?',\n      icon: <ExclamationCircleOutlined />,\n      onOk: async () => {\n        const res: any = await httpCancelOrder(currentId);\n        if (res) httpGetOrderDetailReq();\n      },\n      onCancel() {\n        console.log('Cancel');\n      },\n    });\n  }\n\n  return (\n    <div className={styles['order-container']}>\n      <SideOrder\n        list={orderSource}\n        loading={isLoading}\n        delivDict={dictList ? dictList.deliveryStatus : {}}\n        total={total}\n        id={currentId}\n        formType={detailType}\n        onScroll={() => {\n          if (detailType === 'orderSearch') {\n            setOrderParams({\n              ...orderParams,\n              pageNo: orderParams.pageNo + 1,\n            });\n          }\n        }}\n        onChange={(id) => {\n          httpGetOrderDetailReq(id);\n        }}\n        onSearch={(keyword) => {\n          setOrderParams({\n            ...orderParams,\n            pageNo: 1,\n            entity: {\n              ...orderParams.entity,\n              simpleSearch: keyword,\n            },\n          });\n        }}\n      />\n      <div className={styles['perscript-container']}>\n        {/* 面包屑 */}\n        <BackBreadcrumb\n          breadcrumbMap={[\n            { label: '处方流转' },\n            { label: '系统分析' },\n            { label: '订单查询', link: '/system/order/tracking' },\n            { label: '订单详情' },\n          ]}\n          link=\"/system/order/tracking\"\n        />\n        {/* 用户信息 */}\n        <UserInfo\n          clas={styles.mb12}\n          patient={detail?.patientInfo}\n          delivery={detail?.deliveryInfo}\n        />\n        <div className={styles.container}>\n          <div\n            className={`${styles['left-container']} ${\n              detail?.currentStatus && !FOOT_CONTROL[detail?.currentStatus]\n                ? styles['left-container-calc']\n                : ''\n            }`}\n          >\n            <OrderStatus\n              clas={styles.mb12}\n              id={detail?.orderInfo?.id}\n              processStatus={detail?.processStatus}\n              receiveTime={detail?.orderInfo?.receiveTime}\n              doctor={detail?.prescriptionInfo?.doctor}\n              pCreateTime={detail?.orderInfo?.createTime}\n              dispensePharmacist={detail?.prescriptionInfo?.dispensePharmacist}\n              createTime={detail?.deliveryInfo?.updateTime}\n              auditPharmacist={detail?.prescriptionInfo?.auditPharmacist}\n              deliveryUser={detail?.deliveryInfo?.deliveryUser}\n              signTime={detail?.deliveryInfo?.signTime}\n              signUser={detail?.deliveryInfo?.signUser}\n              currentStatus={detail?.currentStatus}\n              message={detail?.orderInfo?.message}\n              invalidReason={detail?.orderInfo?.invalidReason}\n              deliveryCategory={detail?.orderInfo?.deliveryCategory}\n              formType={detailType}\n              currentStatusDict={dictList ? dictList?.OrderCurrentStatus : {}}\n            />\n            <DrugList\n              clas={styles.mb12}\n              totalAmount={detail?.orderInfo?.totalAmount}\n              deliveryAmount={detail?.orderInfo?.deliveryAmount}\n              drugList={detail?.prescriptionInfo?.drugList}\n              currentStatus={detail?.currentStatus}\n              drugFrequency={dictList && dictList.drugFrequency}\n              drugUsage={dictList ? dictList?.drugUsage : {}}\n            />\n            <RationalAdvice\n              clas={styles.mb12}\n              currentStatus={detail?.currentStatus}\n              interaction={interaction || []}\n              interactionTip={interactionTip}\n              avoid={avoid || []}\n              avoidTip={avoidTip}\n              beyondIndication={beyondIndication || []}\n              repeatMedication={repeatMedication || []}\n              repeatMedicationTip={repeatMedicationTip}\n              remarkCode={remarkCode}\n              errorCode={errorCode}\n              onDrug={(drugid) => httpQueryInstructionReq(drugid)}\n              onReload={() => setIsError(!isError)}\n            />\n            <DeliveryLog\n              receiptInfo={{\n                toName: detail?.deliveryInfo?.toName,\n                toAddress: detail?.deliveryInfo?.toAddress,\n                toPhone: detail?.deliveryInfo?.toPhone,\n              }}\n              shippInfo={{\n                deliveryCode: detail?.deliveryInfo?.deliveryCode,\n                deliveryNo: detail?.deliveryInfo?.deliveryNo,\n                deliveryStatus: detail?.orderInfo?.deliveryStatus,\n                deliveryUser: detail?.deliveryInfo?.deliveryUser,\n                deliveryPhone: detail?.deliveryInfo?.deliveryPhone,\n              }}\n              deliverySupplyer={dictList && dictList?.deliverySupplyer}\n              deliveryStatusDict={dictList && dictList?.deliveryStatus}\n            />\n          </div>\n          <div className={styles['perscript-info']}>\n            <PayInfo clas={styles.mb12} payInfo={detail?.orderInfo} />\n            <PrescriptInfo\n              perscript={detail?.prescriptionInfo}\n              createTime={detail?.orderInfo?.createTime}\n              isCalc={detail?.currentStatus && !FOOT_CONTROL[detail?.currentStatus]}\n              patientName={detail?.patientInfo?.name}\n            />\n          </div>\n        </div>\n        {/* 底部操作栏 */}\n        {detail?.currentStatus && !FOOT_CONTROL[detail?.currentStatus] ? null : (\n          <ControlTool\n            formType={detailType}\n            type={detail?.orderInfo?.deliveryCategory}\n            status={detail?.currentStatus}\n            cancelOrder={() => {\n              httpCancelOrderReq();\n            }}\n          />\n        )}\n        {/* 药品说明书 */}\n        <DrugInstructModal\n          visible={isDrugInstruct}\n          {...rationalDrug}\n          onCancel={() => setIsDrugInstruct(false)}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default PrescriptionOrderDetail;\n","import { useEffect, useState } from 'react';\nimport { httpGetOrdeList, httpListAllChain } from '@/services/system';\n\nexport const useOrderListHttp = (params: AdminOrder.GetListReq, type?: string) => {\n  const [total, setTotal] = useState(0);\n  const [isLoading, setIsLoading] = useState(false);\n  const [orderSource, setOrderSource] = useState<AdminOrder.GetListRes[]>([]);\n  const [chainSource, setChainSource] = useState<AdminOrder.GetListRes[]>([]);\n\n  async function httpGetOrdeListReq() {\n    setIsLoading(true);\n    try {\n      const res: any = await httpGetOrdeList(params);\n      setTotal(res?.total);\n      setIsLoading(false);\n      if (type) {\n        if (params.pageNo === 1) {\n          setOrderSource(res?.records);\n        } else {\n          setOrderSource(orderSource.concat(res?.records));\n        }\n      } else {\n        setOrderSource(res?.records);\n      }\n    } catch (err) {\n      setIsLoading(false);\n    }\n  }\n\n  async function httpListAllChainReq() {\n    const res = await httpListAllChain();\n    setChainSource(res);\n    setIsLoading(false);\n  }\n\n  useEffect(() => {\n    httpGetOrdeListReq();\n    httpListAllChainReq();\n  }, [params]);\n\n  return { total, orderSource, isLoading, chainSource };\n};\n\nexport default {\n  useOrderListHttp,\n};\n"],"names":["confirm","Modal","FOOT_CONTROL","timeout","begin_delivery","delivery_exception","wait","useState","isError","setIsError","dictList","useDictHttp","useSearchParams","ids","getAll","useRationalDrug","interaction","interactionTip","avoid","avoidTip","beyondIndication","repeatMedication","repeatMedicationTip","remarkCode","errorCode","detailType","currentId","setCurrentId","detail","setDetail","isDrugInstruct","setIsDrugInstruct","rationalDrug","setRationalDrug","pageNo","pageSize","entity","orders","property","direction","orderParams","setOrderParams","useOrderListHttp","total","orderSource","isLoading","httpGetOrderDetailReq","orderId","httpGetOrderDetail","res","window","history","pushState","id","httpQueryInstruction","commonName","common_name","content","useEffect","className","styles","list","loading","delivDict","deliveryStatus","formType","onScroll","onChange","onSearch","keyword","simpleSearch","breadcrumbMap","label","link","clas","patient","patientInfo","delivery","deliveryInfo","currentStatus","orderInfo","processStatus","receiveTime","doctor","prescriptionInfo","pCreateTime","createTime","dispensePharmacist","updateTime","auditPharmacist","deliveryUser","signTime","signUser","message","invalidReason","deliveryCategory","currentStatusDict","OrderCurrentStatus","totalAmount","deliveryAmount","drugList","drugFrequency","drugUsage","onDrug","drugid","httpQueryInstructionReq","onReload","receiptInfo","toName","toAddress","toPhone","shippInfo","deliveryCode","deliveryNo","deliveryPhone","deliverySupplyer","deliveryStatusDict","payInfo","perscript","isCalc","patientName","name","type","status","cancelOrder","title","icon","onOk","httpCancelOrder","onCancel","console","log","visible","params","setTotal","setIsLoading","setOrderSource","chainSource","setChainSource","httpGetOrdeList","records","concat","httpListAllChain","httpGetOrdeListReq","httpListAllChainReq"],"sourceRoot":""}